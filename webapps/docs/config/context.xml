<?xml version="1.0"?>
<!DOCTYPE document [
  <!ENTITY project SYSTEM "project.xml">
]>
<document url="context.html">

  &project;

  <properties>
    <author email="jfclere@gmail.com">Jean-Frederic Clere</author>
    <title>The Context Container</title>
  </properties>

<body>


<section name="Introduction">

  <p>The <strong>Context</strong> element represents a <em>web
  application</em>, which is run within a particular virtual host.
  Each web application is based on a <em>Web Application Archive</em>
  (WAR) file, or a corresponding directory containing the corresponding
  unpacked contents, as described in the Servlet Specification (version
  2.2 or later).  For more information about web application archives,
  you can download the
  <a href="http://java.sun.com/products/servlet/download.html">Servlet
  Specification</a>, and review the JBoss Web
  <a href="../appdev/index.html">Application Developer's Guide</a>.</p>

  <p>The web application used to process each HTTP request is selected
  by Catalina based on matching the longest possible prefix of the
  Request URI against the <em>context path</em> of each defined Context.
  Once selected, that Context will select an appropriate servlet to
  process the incoming request, according to the servlet mappings defined
  in the <em>web application deployment descriptor</em> file (which MUST
  be located at <code>/WEB-INF/web.xml</code> within the web app's
  directory hierarchy).</p>

  <p>You may define as many <strong>Context</strong> elements as you
  wish.  Each such Context MUST have a unique context path. In
  addition, a Context must be present with a context path equal to
  a zero-length string.  This Context becomes the <em>default</em>
  web application for this virtual host, and is used to process all
  requests that do not match any other Context's context path.</p>

  <p><b>In AS7 the file context.xml is ignored </b>
  Most of the old context.xml configuration has been moved to
  jboss-web.xml (See <a href="../appdev/jbossweb.html"> jboss-web.xml</a>).</p>

</section>


<section name="Attributes">

  <subsection name="Common Attributes">

    <p>All implementations of <strong>Context</strong>
    support the following attributes:</p>

    <attributes>

      <attribute name="backgroundProcessorDelay" required="false">
        <p>This value represents the delay in seconds between the 
        invocation of the backgroundProcess method on this context and 
        its child containers, including all wrappers. 
        Child containers will not be invoked if their delay value is not 
        negative (which would mean they are using their own processing 
        thread). Setting this to a positive value will cause 
        a thread to be spawn. After waiting the specified amount of time, 
        the thread will invoke the backgroundProcess method on this host 
        and all its child containers. A context will use background 
        processing to perform session expiration and class monitoring for
        reloading. The value of this attribut is 10 seconds.</p>
      </attribute>

      <attribute name="className" required="false">
        <p>Java class name of the implementation to use.  This class must
        implement the <code>org.apache.catalina.Context</code> interface.
        org.apache.catalina.core.StandardContext is used.</p>
      </attribute>

      <attribute name="cookies" required="false">
        <p>To control the cookies use <code>session-config</code> 
        in web.xml</p>
      </attribute>

      <attribute name="crossContext" required="false">
        <p>Use <code>disable-cross-context</code> in jboss-web.xml</p>
        <p>Set to <code>false</code> if you want calls within this application
        to <code>ServletContext.getContext()</code> to successfully return a
        request dispatcher for other web applications running on this virtual
        host.  Set to <code>true</code> (the default) in security
        conscious environments, to make <code>getContext()</code> always
        return <code>null</code>.</p>
      </attribute>

      <attribute name="docBase" required="false">
        <p>Can't be changed in AS7</p>
      </attribute>

      <attribute name="override" required="false">
        <p>Not supported in AS7</p>
      </attribute>

      <attribute name="privileged" required="false">
        <p>Not supported in AS7</p>
      </attribute>

      <attribute name="path" required="false">
        <p>The <em>context path</em> of this web application, which is
        matched against the beginning of each request URI to select the
        appropriate web application for processing.  All of the context paths
        within a particular <a href="host.html">Host</a> must be unique.
        If you specify a context path of an empty string (""), you are
        defining the <em>default</em> web application for this Host, which
        will process all requests not assigned to other Contexts.
        Use <code>context-root</code> in jboss-web.xml to configure that in AS7.</p>
      </attribute>

      <attribute name="reloadable" required="false">
        <p>Set to <code>true</code> if you want Catalina to monitor classes in
        <code>/WEB-INF/classes/</code> and <code>/WEB-INF/lib</code> for
        changes, and automatically reload the web application if a change
        is detected.  This feature is very useful during application
        development, but it requires significant runtime overhead and is
        not recommended for use on deployed production applications.
        In AS7 you can use use the <code>deployment-scanner</code> in standalone.xml
        or <code>development</code> in the jsp-configuration element inside the
        subsystem=web element.</p>
      </attribute>

      <attribute name="wrapperClass" required="false">
        <p>Java class name of the <code>org.apache.catalina.Wrapper</code>
        implementation class that will be used for servlets managed by this
        Context.  <code>org.apache.catalina.core.StandardWrapper</code> is used.</p>
      </attribute>

    </attributes>

  </subsection>


  <subsection name="Standard Implementation">

    <p>The standard implementation of <strong>Context</strong> is
    <strong>org.apache.catalina.core.StandardContext</strong>.
    It supports the following additional attributes (in addition to the
    common attributes listed above):</p>

    <attributes>

      <attribute name="allowLinking" required="false">
        <p>Actually not supported in AS7</p>
        <p>If the value of this flag is <code>true</code>, symlinks will be
        allowed inside the web application, pointing to resources outside the
        web application base path. If not specified, the default value
        of the flag is <code>false</code>.</p>
        <p><b>NOTE: This flag MUST NOT be set to true on the Windows platform
        (or any other OS which does not have a case sensitive filesystem),
        as it will disable case sensitivity checks, allowing JSP source code
        disclosure, among other security problems.</b></p>
      </attribute>

      <attribute name="antiJARLocking" required="false">
        <p>Not supported in AS7</p>
      </attribute>

      <attribute name="antiResourceLocking" required="false">
        <p>Not supported in AS7</p>
      </attribute>

      <attribute name="cacheMaxSize" required="false">
        <p>Maximum size of the static resource cache in kilobytes. 
        The default value is <code>10240</code>
        (10 megabytes) is used in AS7.</p>
      </attribute>

      <attribute name="cacheTTL" required="false">
        <p>Amount of time in milliseconds between cache entries revalidation.
        The default value is <code>5000</code> 
        (5 seconds) is used in AS7.</p>
      </attribute>

      <attribute name="cachingAllowed" required="false">
        <p>If the value of this flag is <code>true</code>, the cache for static
        resources will be used.
        The default value <code>true</code> is used in AS7.</p>
      </attribute>

      <attribute name="caseSensitive" required="false">
        <p>If the value of this flag is <code>true</code>, all case sensitivity
        checks will be disabled. If not 
        specified, the default value of the flag is <code>true</code>.</p>
        <p><b>NOTE: This flag MUST NOT be set to false on the Windows platform
        (or any other OS which does not have a case sensitive filesystem),
        as it will disable case sensitivity checks, allowing JSP source code
        disclosure, among other security problems.</b>
        The default value <code>true</code> is used in AS7.</p>
      </attribute>

      <attribute name="processTlds" required="false">
        <p>Whether the context should process TLDs on startup.  The default
        is true.  The false setting is intended for special cases
        that know in advance TLDs are not part of the webapp.
        The default value <code>true</code> is used in AS7.</p>
      </attribute>

      <attribute name="swallowOutput" required="false">
        <p>Not supported in AS7. The outputs go to server.log file</p>
      </attribute>

      <attribute name="tldNamespaceAware" required="false">
        <p>Not supported in AS7</p>
      </attribute>

      <attribute name="tldValidation" required="false">
        <p>Not supported in AS7</p>
      </attribute>

      <attribute name="unloadDelay" required="false">
        <p>Not supported in AS7</p>
      </attribute>

      <attribute name="unpackWAR" required="false">
        <p>Not supported in AS7</p>
        <p>AS7 will unpack all compressed web applications before
        running them.</p>
      </attribute>

      <attribute name="useNaming" required="false">
        <p>Not supported in AS7</p>
      </attribute>

      <attribute name="workDir" required="false">
        <p>Pathname to a scratch directory to be provided by this Context
        for temporary read-write use by servlets within the associated web
        application.  This directory will be made visible to servlets in the
        web application by a servlet context attribute (of type
        <code>java.io.File</code>) named
        <code>javax.servlet.context.tempdir</code> as described in the
        Servlet Specification.
        In AS7 something like <code>standalone/tmp/work/jboss.web</code> is used.</p>
      </attribute>

    </attributes>

  </subsection>


</section>

<section name="Special Features">


  <subsection name="jboss-web.xml">

    <p>In AS7 most of the feature of <code>context.xml</code> are now in <code>jboss-web.xml</code>.
       See <a href="./appdev/jbossweb.html">jboss-web.xml</a> for more information.</p>

  </subsection>

</section>


</body>


</document>
